// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

package project

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Employee struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Category             int32             `protobuf:"varint,3,opt,name=category,proto3" json:"category,omitempty"`
	Tags                 []string          `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Employee) Reset()         { *m = Employee{} }
func (m *Employee) String() string { return proto.CompactTextString(m) }
func (*Employee) ProtoMessage()    {}
func (*Employee) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_ccea03bbe807e19f, []int{0}
}
func (m *Employee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Employee.Unmarshal(m, b)
}
func (m *Employee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Employee.Marshal(b, m, deterministic)
}
func (dst *Employee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Employee.Merge(dst, src)
}
func (m *Employee) XXX_Size() int {
	return xxx_messageInfo_Employee.Size(m)
}
func (m *Employee) XXX_DiscardUnknown() {
	xxx_messageInfo_Employee.DiscardUnknown(m)
}

var xxx_messageInfo_Employee proto.InternalMessageInfo

func (m *Employee) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Employee) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Employee) GetCategory() int32 {
	if m != nil {
		return m.Category
	}
	return 0
}

func (m *Employee) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Employee) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type ID struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_ccea03bbe807e19f, []int{1}
}
func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (dst *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(dst, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Employee)(nil), "project.Employee")
	proto.RegisterMapType((map[string]string)(nil), "project.Employee.MetadataEntry")
	proto.RegisterType((*ID)(nil), "project.ID")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CRUDClient is the client API for CRUD service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CRUDClient interface {
	CreateItem(ctx context.Context, in *Employee, opts ...grpc.CallOption) (*ID, error)
	ReadItem(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Employee, error)
	UpdateItem(ctx context.Context, in *Employee, opts ...grpc.CallOption) (*ID, error)
	DeleteItem(ctx context.Context, in *ID, opts ...grpc.CallOption) (*ID, error)
}

type cRUDClient struct {
	cc *grpc.ClientConn
}

func NewCRUDClient(cc *grpc.ClientConn) CRUDClient {
	return &cRUDClient{cc}
}

func (c *cRUDClient) CreateItem(ctx context.Context, in *Employee, opts ...grpc.CallOption) (*ID, error) {
	out := new(ID)
	err := c.cc.Invoke(ctx, "/project.CRUD/CreateItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cRUDClient) ReadItem(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Employee, error) {
	out := new(Employee)
	err := c.cc.Invoke(ctx, "/project.CRUD/ReadItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cRUDClient) UpdateItem(ctx context.Context, in *Employee, opts ...grpc.CallOption) (*ID, error) {
	out := new(ID)
	err := c.cc.Invoke(ctx, "/project.CRUD/UpdateItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cRUDClient) DeleteItem(ctx context.Context, in *ID, opts ...grpc.CallOption) (*ID, error) {
	out := new(ID)
	err := c.cc.Invoke(ctx, "/project.CRUD/DeleteItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CRUDServer is the server API for CRUD service.
type CRUDServer interface {
	CreateItem(context.Context, *Employee) (*ID, error)
	ReadItem(context.Context, *ID) (*Employee, error)
	UpdateItem(context.Context, *Employee) (*ID, error)
	DeleteItem(context.Context, *ID) (*ID, error)
}

func RegisterCRUDServer(s *grpc.Server, srv CRUDServer) {
	s.RegisterService(&_CRUD_serviceDesc, srv)
}

func _CRUD_CreateItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Employee)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CRUDServer).CreateItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.CRUD/CreateItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CRUDServer).CreateItem(ctx, req.(*Employee))
	}
	return interceptor(ctx, in, info, handler)
}

func _CRUD_ReadItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CRUDServer).ReadItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.CRUD/ReadItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CRUDServer).ReadItem(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _CRUD_UpdateItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Employee)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CRUDServer).UpdateItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.CRUD/UpdateItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CRUDServer).UpdateItem(ctx, req.(*Employee))
	}
	return interceptor(ctx, in, info, handler)
}

func _CRUD_DeleteItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CRUDServer).DeleteItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.CRUD/DeleteItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CRUDServer).DeleteItem(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _CRUD_serviceDesc = grpc.ServiceDesc{
	ServiceName: "project.CRUD",
	HandlerType: (*CRUDServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateItem",
			Handler:    _CRUD_CreateItem_Handler,
		},
		{
			MethodName: "ReadItem",
			Handler:    _CRUD_ReadItem_Handler,
		},
		{
			MethodName: "UpdateItem",
			Handler:    _CRUD_UpdateItem_Handler,
		},
		{
			MethodName: "DeleteItem",
			Handler:    _CRUD_DeleteItem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc.proto",
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor_grpc_ccea03bbe807e19f) }

var fileDescriptor_grpc_ccea03bbe807e19f = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xbf, 0x4e, 0xf3, 0x30,
	0x14, 0xc5, 0xeb, 0xfc, 0xf9, 0xbe, 0x70, 0x2b, 0x10, 0x5c, 0x75, 0x88, 0xb2, 0x10, 0x65, 0xca,
	0x80, 0x32, 0x94, 0x05, 0xd1, 0xb1, 0xe9, 0x90, 0x81, 0x25, 0x52, 0x1f, 0xc0, 0xc4, 0x57, 0x51,
	0x21, 0xa9, 0x2d, 0x63, 0x90, 0xf2, 0x72, 0x3c, 0x07, 0x8f, 0x83, 0x1c, 0xdc, 0x88, 0xa8, 0x0b,
	0xdb, 0xf1, 0xbd, 0xe7, 0x9c, 0xfb, 0x93, 0x0c, 0xd0, 0x6a, 0xd5, 0x14, 0x4a, 0x4b, 0x23, 0xf1,
	0xbf, 0xd2, 0xf2, 0x85, 0x1a, 0x93, 0x7d, 0x31, 0x88, 0x76, 0xbd, 0xea, 0xe4, 0x40, 0x84, 0x08,
	0xc1, 0x91, 0xf7, 0x14, 0xb3, 0x94, 0xe5, 0x17, 0xf5, 0xa8, 0xf1, 0x0a, 0xbc, 0x83, 0x88, 0xbd,
	0x71, 0xe2, 0x1d, 0x04, 0x26, 0x10, 0x35, 0xdc, 0x50, 0x2b, 0xf5, 0x10, 0xfb, 0x29, 0xcb, 0xc3,
	0x7a, 0x7a, 0xdb, 0xbc, 0xe1, 0xed, 0x5b, 0x1c, 0xa4, 0xbe, 0xcd, 0x5b, 0x8d, 0x1b, 0x88, 0x7a,
	0x32, 0x5c, 0x70, 0xc3, 0xe3, 0x30, 0xf5, 0xf3, 0xe5, 0xfa, 0xb6, 0x70, 0xc7, 0x8b, 0xd3, 0xe1,
	0xe2, 0xc9, 0x39, 0x76, 0x47, 0xa3, 0x87, 0x7a, 0x0a, 0x24, 0x1b, 0xb8, 0x9c, 0xad, 0xf0, 0x1a,
	0xfc, 0x57, 0x1a, 0x1c, 0xa0, 0x95, 0xb8, 0x82, 0xf0, 0x83, 0x77, 0xef, 0xe4, 0x10, 0x7f, 0x1e,
	0x8f, 0xde, 0x03, 0xcb, 0x56, 0xe0, 0x55, 0xa5, 0xe3, 0x67, 0x27, 0xfe, 0xf5, 0x27, 0x83, 0x60,
	0x5b, 0xef, 0x4b, 0x2c, 0x00, 0xb6, 0x9a, 0xb8, 0xa1, 0xca, 0x50, 0x8f, 0x37, 0x67, 0x50, 0xc9,
	0x72, 0x1a, 0x55, 0x65, 0xb6, 0xc0, 0x3b, 0x88, 0x6a, 0xe2, 0x62, 0x74, 0xff, 0x5e, 0x25, 0xe7,
	0xd1, 0x6c, 0x61, 0xdb, 0xf7, 0x4a, 0xfc, 0xbd, 0x3d, 0x07, 0x28, 0xa9, 0x23, 0xe7, 0x9f, 0xf5,
	0xcf, 0x9d, 0xcf, 0xff, 0xc6, 0x1f, 0xbc, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x8f, 0x18, 0x5b,
	0x9d, 0xcf, 0x01, 0x00, 0x00,
}
